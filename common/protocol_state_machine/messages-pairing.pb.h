/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Mon Jan 28 21:43:08 2019. */

#ifndef PB_TYPESAFELY_PROTOCOL_PAIRING_MESSAGES_PAIRING_PB_H_INCLUDED
#define PB_TYPESAFELY_PROTOCOL_PAIRING_MESSAGES_PAIRING_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _typesafely_protocol_pairing_BeginAuthenticationRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_BeginAuthenticationRequest) */
} typesafely_protocol_pairing_BeginAuthenticationRequest;

typedef struct _typesafely_protocol_pairing_BeginAuthenticationResponse {
    char dummy_field;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_BeginAuthenticationResponse) */
} typesafely_protocol_pairing_BeginAuthenticationResponse;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_CommitmentExchangeRequest_host_commitment_t;
typedef struct _typesafely_protocol_pairing_CommitmentExchangeRequest {
    typesafely_protocol_pairing_CommitmentExchangeRequest_host_commitment_t host_commitment;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_CommitmentExchangeRequest) */
} typesafely_protocol_pairing_CommitmentExchangeRequest;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_CommitmentExchangeResponse_device_commitment_t;
typedef struct _typesafely_protocol_pairing_CommitmentExchangeResponse {
    typesafely_protocol_pairing_CommitmentExchangeResponse_device_commitment_t device_commitment;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_CommitmentExchangeResponse) */
} typesafely_protocol_pairing_CommitmentExchangeResponse;

typedef PB_BYTES_ARRAY_T(32) typesafely_protocol_pairing_ECDHPublicKey_public_key_t;
typedef struct _typesafely_protocol_pairing_ECDHPublicKey {
    typesafely_protocol_pairing_ECDHPublicKey_public_key_t public_key;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_ECDHPublicKey) */
} typesafely_protocol_pairing_ECDHPublicKey;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_NonceExchangeRequest_host_nonce_t;
typedef struct _typesafely_protocol_pairing_NonceExchangeRequest {
    typesafely_protocol_pairing_NonceExchangeRequest_host_nonce_t host_nonce;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_NonceExchangeRequest) */
} typesafely_protocol_pairing_NonceExchangeRequest;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_NonceExchangeResponse_device_nonce_t;
typedef struct _typesafely_protocol_pairing_NonceExchangeResponse {
    typesafely_protocol_pairing_NonceExchangeResponse_device_nonce_t device_nonce;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_NonceExchangeResponse) */
} typesafely_protocol_pairing_NonceExchangeResponse;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_ParameterConfirmationRequest_host_parameter_confirmation_t;
typedef struct _typesafely_protocol_pairing_ParameterConfirmationRequest {
    typesafely_protocol_pairing_ParameterConfirmationRequest_host_parameter_confirmation_t host_parameter_confirmation;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_ParameterConfirmationRequest) */
} typesafely_protocol_pairing_ParameterConfirmationRequest;

typedef PB_BYTES_ARRAY_T(16) typesafely_protocol_pairing_ParameterConfirmationResponse_device_parameter_confirm_t;
typedef struct _typesafely_protocol_pairing_ParameterConfirmationResponse {
    typesafely_protocol_pairing_ParameterConfirmationResponse_device_parameter_confirm_t device_parameter_confirm;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_ParameterConfirmationResponse) */
} typesafely_protocol_pairing_ParameterConfirmationResponse;

typedef struct _typesafely_protocol_pairing_InitiatePairingRequest {
    bool host_recognises_device_id;
    typesafely_protocol_pairing_ECDHPublicKey host_ecdh_public_key;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_InitiatePairingRequest) */
} typesafely_protocol_pairing_InitiatePairingRequest;

typedef struct _typesafely_protocol_pairing_InitiatePairingResponse {
    typesafely_protocol_pairing_ECDHPublicKey device_ecdh_public_key;
/* @@protoc_insertion_point(struct:typesafely_protocol_pairing_InitiatePairingResponse) */
} typesafely_protocol_pairing_InitiatePairingResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define typesafely_protocol_pairing_ECDHPublicKey_init_default {{0, {0}}}
#define typesafely_protocol_pairing_InitiatePairingRequest_init_default {0, typesafely_protocol_pairing_ECDHPublicKey_init_default}
#define typesafely_protocol_pairing_InitiatePairingResponse_init_default {typesafely_protocol_pairing_ECDHPublicKey_init_default}
#define typesafely_protocol_pairing_BeginAuthenticationRequest_init_default {0}
#define typesafely_protocol_pairing_BeginAuthenticationResponse_init_default {0}
#define typesafely_protocol_pairing_CommitmentExchangeRequest_init_default {{0, {0}}}
#define typesafely_protocol_pairing_CommitmentExchangeResponse_init_default {{0, {0}}}
#define typesafely_protocol_pairing_NonceExchangeRequest_init_default {{0, {0}}}
#define typesafely_protocol_pairing_NonceExchangeResponse_init_default {{0, {0}}}
#define typesafely_protocol_pairing_ParameterConfirmationRequest_init_default {{0, {0}}}
#define typesafely_protocol_pairing_ParameterConfirmationResponse_init_default {{0, {0}}}
#define typesafely_protocol_pairing_ECDHPublicKey_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_InitiatePairingRequest_init_zero {0, typesafely_protocol_pairing_ECDHPublicKey_init_zero}
#define typesafely_protocol_pairing_InitiatePairingResponse_init_zero {typesafely_protocol_pairing_ECDHPublicKey_init_zero}
#define typesafely_protocol_pairing_BeginAuthenticationRequest_init_zero {0}
#define typesafely_protocol_pairing_BeginAuthenticationResponse_init_zero {0}
#define typesafely_protocol_pairing_CommitmentExchangeRequest_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_CommitmentExchangeResponse_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_NonceExchangeRequest_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_NonceExchangeResponse_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_ParameterConfirmationRequest_init_zero {{0, {0}}}
#define typesafely_protocol_pairing_ParameterConfirmationResponse_init_zero {{0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define typesafely_protocol_pairing_CommitmentExchangeRequest_host_commitment_tag 1
#define typesafely_protocol_pairing_CommitmentExchangeResponse_device_commitment_tag 1
#define typesafely_protocol_pairing_ECDHPublicKey_public_key_tag 1
#define typesafely_protocol_pairing_NonceExchangeRequest_host_nonce_tag 1
#define typesafely_protocol_pairing_NonceExchangeResponse_device_nonce_tag 1
#define typesafely_protocol_pairing_ParameterConfirmationRequest_host_parameter_confirmation_tag 1
#define typesafely_protocol_pairing_ParameterConfirmationResponse_device_parameter_confirm_tag 1
#define typesafely_protocol_pairing_InitiatePairingRequest_host_recognises_device_id_tag 1
#define typesafely_protocol_pairing_InitiatePairingRequest_host_ecdh_public_key_tag 2
#define typesafely_protocol_pairing_InitiatePairingResponse_device_ecdh_public_key_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t typesafely_protocol_pairing_ECDHPublicKey_fields[2];
extern const pb_field_t typesafely_protocol_pairing_InitiatePairingRequest_fields[3];
extern const pb_field_t typesafely_protocol_pairing_InitiatePairingResponse_fields[2];
extern const pb_field_t typesafely_protocol_pairing_BeginAuthenticationRequest_fields[1];
extern const pb_field_t typesafely_protocol_pairing_BeginAuthenticationResponse_fields[1];
extern const pb_field_t typesafely_protocol_pairing_CommitmentExchangeRequest_fields[2];
extern const pb_field_t typesafely_protocol_pairing_CommitmentExchangeResponse_fields[2];
extern const pb_field_t typesafely_protocol_pairing_NonceExchangeRequest_fields[2];
extern const pb_field_t typesafely_protocol_pairing_NonceExchangeResponse_fields[2];
extern const pb_field_t typesafely_protocol_pairing_ParameterConfirmationRequest_fields[2];
extern const pb_field_t typesafely_protocol_pairing_ParameterConfirmationResponse_fields[2];

/* Maximum encoded size of messages (where known) */
#define typesafely_protocol_pairing_ECDHPublicKey_size 34
#define typesafely_protocol_pairing_InitiatePairingRequest_size 38
#define typesafely_protocol_pairing_InitiatePairingResponse_size 36
#define typesafely_protocol_pairing_BeginAuthenticationRequest_size 0
#define typesafely_protocol_pairing_BeginAuthenticationResponse_size 0
#define typesafely_protocol_pairing_CommitmentExchangeRequest_size 18
#define typesafely_protocol_pairing_CommitmentExchangeResponse_size 18
#define typesafely_protocol_pairing_NonceExchangeRequest_size 18
#define typesafely_protocol_pairing_NonceExchangeResponse_size 18
#define typesafely_protocol_pairing_ParameterConfirmationRequest_size 18
#define typesafely_protocol_pairing_ParameterConfirmationResponse_size 18

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_PAIRING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
