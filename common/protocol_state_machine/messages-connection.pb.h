/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Mon Jan 28 21:43:08 2019. */

#ifndef PB_TYPESAFELY_PROTOCOL_CONNECTION_MESSAGES_CONNECTION_PB_H_INCLUDED
#define PB_TYPESAFELY_PROTOCOL_CONNECTION_MESSAGES_CONNECTION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(7) typesafely_protocol_connection_ConnectRequest_id_host_t;
typedef struct _typesafely_protocol_connection_ConnectRequest {
    typesafely_protocol_connection_ConnectRequest_id_host_t id_host;
/* @@protoc_insertion_point(struct:typesafely_protocol_connection_ConnectRequest) */
} typesafely_protocol_connection_ConnectRequest;

typedef PB_BYTES_ARRAY_T(7) typesafely_protocol_connection_ConnectResponse_id_device_t;
typedef struct _typesafely_protocol_connection_ConnectResponse {
    bool device_recognises_host_id;
    typesafely_protocol_connection_ConnectResponse_id_device_t id_device;
/* @@protoc_insertion_point(struct:typesafely_protocol_connection_ConnectResponse) */
} typesafely_protocol_connection_ConnectResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define typesafely_protocol_connection_ConnectRequest_init_default {{0, {0}}}
#define typesafely_protocol_connection_ConnectResponse_init_default {0, {0, {0}}}
#define typesafely_protocol_connection_ConnectRequest_init_zero {{0, {0}}}
#define typesafely_protocol_connection_ConnectResponse_init_zero {0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define typesafely_protocol_connection_ConnectRequest_id_host_tag 1
#define typesafely_protocol_connection_ConnectResponse_device_recognises_host_id_tag 1
#define typesafely_protocol_connection_ConnectResponse_id_device_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t typesafely_protocol_connection_ConnectRequest_fields[2];
extern const pb_field_t typesafely_protocol_connection_ConnectResponse_fields[3];

/* Maximum encoded size of messages (where known) */
#define typesafely_protocol_connection_ConnectRequest_size 9
#define typesafely_protocol_connection_ConnectResponse_size 11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_CONNECTION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
